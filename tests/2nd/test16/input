<<<<<<< HEAD
;;; Teste 16 E2
;;; procura profundidade primeiro num problema alternativo ao jogo do tetris, a implementacao da procura-pp deve ser independente do problema de procura
;;deve retornar uma lista de accoes (ver ficheiro output)
(procura-pp (make-problema :estado-inicial 1 :accoes #'(lambda (e) (if (<= e 15) (list 'left 'right) ())) :resultado #'(lambda (e a) (if (eq a 'left) (* 2 e) (1+ (* 2 e)))) :solucao #'(lambda (e) (= e 13)) :custo-caminho #'(lambda (x) 0)))

;;; Output:

=======
;;; Teste 16 E2
;;; procura profundidade primeiro num problema alternativo ao jogo do tetris, a implementacao da procura-pp deve ser independente do problema de procura
;;deve retornar uma lista de accoes (ver ficheiro output)
(procura-pp (make-problema :estado-inicial 1 :accoes #'(lambda (e) (if (<= e 15) (list 'left 'right) ())) :resultado #'(lambda (e a) (if (eq a 'left) (* 2 e) (1+ (* 2 e)))) :solucao #'(lambda (e) (= e 13)) :custo-caminho #'(lambda (x) 0)))

;;; Output:

>>>>>>> 11e22e8e454b60916865affeb935edb413650070
(RIGHT LEFT RIGHT)